console.log('\'Allo \'Allo!');
var houseapp;
var house;
var houseIndex;
window.addEventListener('load', function () {
    console.log('APP started');
    // Checking if Web3 has been injected by the browser (Mist/MetaMask)
    if (typeof web3 !== 'undefined') {
      // Use Mist/MetaMask's provider
      window.web3 = new Web3(web3.currentProvider);
      //console.log("MetaMask detected!!");
      console.log("log", "MetaMask!! detected");
    } else {
      //console.log('Injected web3 Not Found!!!')
      // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)
      window.web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));
      //var provider = document.getElementById('provider_url').value;
      window.web3 = new Web3(new Web3.providers.HttpProvider(provider));
      //setData("log", "Other Provider detected");
    }
    //var acc=doGetAccounts();
    setData('accInfo', web3.eth.accounts[0]);
    console.log("set up of acc info done");
  });

  function doDeployContract() {
    console.log("trying to doDeployContract");
    //var acc=doGetAccounts();
    setData('accInfo', web3.eth.accounts[0]);
    console.log("in do deploy");
    var track = "https://ropsten.etherscan.io/tx/";
    var houseappContract = web3.eth.contract([ { "constant": false, "inputs": [ { "name": "changeid", "type": "uint256" } ], "name": "getChangedata", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "getChangeCount", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "changeid", "type": "uint256" } ], "name": "getChangewhat", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "fileId", "type": "uint256" } ], "name": "getChangeList", "outputs": [ { "name": "", "type": "uint256[]" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "who", "type": "string" }, { "name": "what", "type": "string" }, { "name": "when", "type": "string" } ], "name": "createFile", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "changeid", "type": "uint256" } ], "name": "getChangewho", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "getFileCount", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "fileId", "type": "uint256" }, { "name": "who", "type": "string" }, { "name": "what", "type": "string" }, { "name": "when", "type": "string" } ], "name": "updateFile", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "author", "type": "string" } ], "name": "CreatedFile", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "author", "type": "string" }, { "indexed": false, "name": "what", "type": "string" }, { "indexed": false, "name": "fileId", "type": "uint256" } ], "name": "UpdateFile", "type": "event" } ]);
    houseapp = houseappContract.new(
      {
        from: web3.eth.accounts[0],
        data: '60806040526000805560006001553480156200001a57600080fd5b50620000d66040805190810160405280600881526020017f416268697368656b0000000000000000000000000000000000000000000000008152506040805190810160405280600881526020017f4e65772046696c650000000000000000000000000000000000000000000000008152506040805190810160405280600981526020017f342d32302d323031380000000000000000000000000000000000000000000000815250620000dc640100000000026401000000009004565b620002fd565b6000806000815480929190600101919050555060016000815480929190600101919050555060026000805481526020019081526020016000206001549080600181540180825580915050906001820390600052602060002001600090919290919091505550600360006001548152602001908152602001600020905083816000019080519060200190620001729291906200024e565b50818160010190805190602001906200018d9291906200024e565b5082816002019080519060200190620001a89291906200024e565b507ffe8ea4038d1beadd817ea0c872bea04d8fbd7feaa58892671e0b465301baadf0846040518080602001828103825283818151815260200191508051906020019080838360005b838110156200020d578082015181840152602081019050620001f0565b50505050905090810190601f1680156200023b5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029157805160ff1916838001178555620002c2565b82800160010185558215620002c2579182015b82811115620002c1578251825591602001919060010190620002a4565b5b509050620002d19190620002d5565b5090565b620002fa91905b80821115620002f6576000816000905550600101620002dc565b5090565b90565b610c25806200030d6000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631476875f1461009357806344e0841e146101395780634e4199ef146101645780635066ea881461020a578063571d6b981461028c5780636cb34dfc14610381578063bab50cc914610427578063df56652714610452575b600080fd5b34801561009f57600080fd5b506100be60048036038101908080359060200190929190505050610551565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100fe5780820151818401526020810190506100e3565b50505050905090810190601f16801561012b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014557600080fd5b5061014e610614565b6040518082815260200191505060405180910390f35b34801561017057600080fd5b5061018f6004803603810190808035906020019092919050505061061e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101cf5780820151818401526020810190506101b4565b50505050905090810190601f1680156101fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021657600080fd5b50610235600480360381019080803590602001909291905050506106e1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561027857808201518184015260208101905061025d565b505050509050019250505060405180910390f35b34801561029857600080fd5b5061037f600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610752565b005b34801561038d57600080fd5b506103ac600480360381019080803590602001909291905050506108bb565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ec5780820151818401526020810190506103d1565b50505050905090810190601f1680156104195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561043357600080fd5b5061043c61097e565b6040518082815260200191505060405180910390f35b34801561045e57600080fd5b5061054f60048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610987565b005b6060600080600360008581526020019081526020016000209150816001019050808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106065780601f106105db57610100808354040283529160200191610606565b820191906000526020600020905b8154815290600101906020018083116105e957829003601f168201915b505050505092505050919050565b6000600154905090565b6060600080600360008581526020019081526020016000209150816002019050808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d35780601f106106a8576101008083540402835291602001916106d3565b820191906000526020600020905b8154815290600101906020018083116106b657829003601f168201915b505050505092505050919050565b606060006002600084815260200190815260200160002090508080548060200260200160405190810160405280929190818152602001828054801561074557602002820191906000526020600020905b815481526020019060010190808311610731575b5050505050915050919050565b60008060008154809291906001019190505550600160008154809291906001019190505550600260008054815260200190815260200160002060015490806001815401808255809150509060018203906000526020600020016000909192909190915055506003600060015481526020019081526020016000209050838160000190805190602001906107e6929190610b54565b50818160010190805190602001906107ff929190610b54565b5082816002019080519060200190610818929190610b54565b507ffe8ea4038d1beadd817ea0c872bea04d8fbd7feaa58892671e0b465301baadf0846040518080602001828103825283818151815260200191508051906020019080838360005b8381101561087b578082015181840152602081019050610860565b50505050905090810190601f1680156108a85780820380516001836020036101000a031916815260200191505b509250505060405180910390a150505050565b6060600080600360008581526020019081526020016000209150816000019050808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109705780601f1061094557610100808354040283529160200191610970565b820191906000526020600020905b81548152906001019060200180831161095357829003601f168201915b505050505092505050919050565b60008054905090565b6000600160008154809291906001019190505550600260008681526020019081526020016000206001549080600181540180825580915050906001820390600052602060002001600090919290919091505550600360006001548152602001908152602001600020905083816000019080519060200190610a09929190610b54565b5081816001019080519060200190610a22929190610b54565b5082816002019080519060200190610a3b929190610b54565b507fc6db2d91bd38fc956ee936e338803ac75e2658056ee148aa87892822b5465305848487604051808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610aaa578082015181840152602081019050610a8f565b50505050905090810190601f168015610ad75780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610b10578082015181840152602081019050610af5565b50505050905090810190601f168015610b3d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b9557805160ff1916838001178555610bc3565b82800160010185558215610bc3579182015b82811115610bc2578251825591602001919060010190610ba7565b5b509050610bd09190610bd4565b5090565b610bf691905b80821115610bf2576000816000905550600101610bda565b5090565b905600a165627a7a723058203c40b4a14fe234758d2fa8c558b4b1413964f8aef73d1c4a7872dae1b50d17d60029',
        gas: '4700000'
      }, function (e, contract) {
        console.log(e, contract);
        
        track = track +contract.transactionHash;
        var a = document.getElementById("contractHash");
        a.href = track;
        //a.innerText = track;
        setData('txHash', contract.transactionHash);
        if (typeof contract.address !== 'undefined') {
          console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
          setData('contract_address', contract.address);
          //getNum();
          //$("#contractHash").addClass("hidden");
          //$("#hiddenContractDiv").removeClass("hidden");
        }
      });
  }

  function doGetAccounts() {
    console.log("in do get accounts");
    web3.eth.getAccounts(function (error, result) {
      if (error)
        console.log('error');
      else {
        var acc = result;
      }
      console.log("hey I am in do get accounts");
      setData('accInfo', acc);
      return acc;
    });
  }

  function createContractInstance(addr) {
    var abiD = [ { "constant": false, "inputs": [ { "name": "changeid", "type": "uint256" } ], "name": "getChangedata", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "getChangeCount", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "changeid", "type": "uint256" } ], "name": "getChangewhat", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "fileId", "type": "uint256" } ], "name": "getChangeList", "outputs": [ { "name": "", "type": "uint256[]" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "who", "type": "string" }, { "name": "what", "type": "string" }, { "name": "when", "type": "string" } ], "name": "createFile", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "changeid", "type": "uint256" } ], "name": "getChangewho", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "getFileCount", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "fileId", "type": "uint256" }, { "name": "who", "type": "string" }, { "name": "what", "type": "string" }, { "name": "when", "type": "string" } ], "name": "updateFile", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "author", "type": "string" } ], "name": "CreatedFile", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "author", "type": "string" }, { "indexed": false, "name": "what", "type": "string" }, { "indexed": false, "name": "fileId", "type": "uint256" } ], "name": "UpdateFile", "type": "event" } ];
    var contract = web3.eth.contract(abiD);
    var instance = contract.at(addr);
  console.log(instance);


  var CreatedFile = instance.CreatedFile();
  CreatedFile.watch(function (error, result) {
    if (error) {
      console.error('File not created!');
    } else {
      console.log("File created------------>");
      console.log(result);
      var created_string = "File is created successfully by: "+ result.args.author;
      setData('event_panel', created_string);
    }
  });

  var UpdateFile = instance.UpdateFile();
  UpdateFile.watch(function (error, result) {
    if (error) {
      console.error('File not Updated!');
    } else {
      console.log("File Updated------------>");
      console.log(result);
      var created_string = "File is updated successfully by: "+ result.args.author+ " what was updated "+result.args.what;
      setData('event_panel', created_string);
    }
  });
  return instance;
  }

  function setData(docElementId, html) {
    document.getElementById(docElementId).innerHTML = html;
  }

  function doDeployContract() {
    console.log("trying to doDeployContract");
    //var acc=doGetAccounts();
    setData('accInfo', web3.eth.accounts[0]);
    console.log("in do deploy");
    var track = "https://ropsten.etherscan.io/tx/";


     var houseappContract = web3.eth.contract([ { "constant": false, "inputs": [ { "name": "changeid", "type": "uint256" } ], "name": "getChangedata", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "getChangeCount", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "changeid", "type": "uint256" } ], "name": "getChangewhat", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "fileId", "type": "uint256" } ], "name": "getChangeList", "outputs": [ { "name": "", "type": "uint256[]" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "who", "type": "string" }, { "name": "what", "type": "string" }, { "name": "when", "type": "string" } ], "name": "createFile", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "changeid", "type": "uint256" } ], "name": "getChangewho", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "getFileCount", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "fileId", "type": "uint256" }, { "name": "who", "type": "string" }, { "name": "what", "type": "string" }, { "name": "when", "type": "string" } ], "name": "updateFile", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "author", "type": "string" } ], "name": "CreatedFile", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "author", "type": "string" }, { "indexed": false, "name": "what", "type": "string" }, { "indexed": false, "name": "fileId", "type": "uint256" } ], "name": "UpdateFile", "type": "event" } ]);
  houseapp = houseappContract.new(
    {
      from: web3.eth.accounts[0],
      data: '60806040526000805560006001553480156200001a57600080fd5b50620000d66040805190810160405280600881526020017f416268697368656b0000000000000000000000000000000000000000000000008152506040805190810160405280600881526020017f4e65772046696c650000000000000000000000000000000000000000000000008152506040805190810160405280600981526020017f342d32302d323031380000000000000000000000000000000000000000000000815250620000dc640100000000026401000000009004565b620002fd565b6000806000815480929190600101919050555060016000815480929190600101919050555060026000805481526020019081526020016000206001549080600181540180825580915050906001820390600052602060002001600090919290919091505550600360006001548152602001908152602001600020905083816000019080519060200190620001729291906200024e565b50818160010190805190602001906200018d9291906200024e565b5082816002019080519060200190620001a89291906200024e565b507ffe8ea4038d1beadd817ea0c872bea04d8fbd7feaa58892671e0b465301baadf0846040518080602001828103825283818151815260200191508051906020019080838360005b838110156200020d578082015181840152602081019050620001f0565b50505050905090810190601f1680156200023b5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029157805160ff1916838001178555620002c2565b82800160010185558215620002c2579182015b82811115620002c1578251825591602001919060010190620002a4565b5b509050620002d19190620002d5565b5090565b620002fa91905b80821115620002f6576000816000905550600101620002dc565b5090565b90565b610c25806200030d6000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631476875f1461009357806344e0841e146101395780634e4199ef146101645780635066ea881461020a578063571d6b981461028c5780636cb34dfc14610381578063bab50cc914610427578063df56652714610452575b600080fd5b34801561009f57600080fd5b506100be60048036038101908080359060200190929190505050610551565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100fe5780820151818401526020810190506100e3565b50505050905090810190601f16801561012b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014557600080fd5b5061014e610614565b6040518082815260200191505060405180910390f35b34801561017057600080fd5b5061018f6004803603810190808035906020019092919050505061061e565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101cf5780820151818401526020810190506101b4565b50505050905090810190601f1680156101fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021657600080fd5b50610235600480360381019080803590602001909291905050506106e1565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561027857808201518184015260208101905061025d565b505050509050019250505060405180910390f35b34801561029857600080fd5b5061037f600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610752565b005b34801561038d57600080fd5b506103ac600480360381019080803590602001909291905050506108bb565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103ec5780820151818401526020810190506103d1565b50505050905090810190601f1680156104195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561043357600080fd5b5061043c61097e565b6040518082815260200191505060405180910390f35b34801561045e57600080fd5b5061054f60048036038101908080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610987565b005b6060600080600360008581526020019081526020016000209150816001019050808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106065780601f106105db57610100808354040283529160200191610606565b820191906000526020600020905b8154815290600101906020018083116105e957829003601f168201915b505050505092505050919050565b6000600154905090565b6060600080600360008581526020019081526020016000209150816002019050808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106d35780601f106106a8576101008083540402835291602001916106d3565b820191906000526020600020905b8154815290600101906020018083116106b657829003601f168201915b505050505092505050919050565b606060006002600084815260200190815260200160002090508080548060200260200160405190810160405280929190818152602001828054801561074557602002820191906000526020600020905b815481526020019060010190808311610731575b5050505050915050919050565b60008060008154809291906001019190505550600160008154809291906001019190505550600260008054815260200190815260200160002060015490806001815401808255809150509060018203906000526020600020016000909192909190915055506003600060015481526020019081526020016000209050838160000190805190602001906107e6929190610b54565b50818160010190805190602001906107ff929190610b54565b5082816002019080519060200190610818929190610b54565b507ffe8ea4038d1beadd817ea0c872bea04d8fbd7feaa58892671e0b465301baadf0846040518080602001828103825283818151815260200191508051906020019080838360005b8381101561087b578082015181840152602081019050610860565b50505050905090810190601f1680156108a85780820380516001836020036101000a031916815260200191505b509250505060405180910390a150505050565b6060600080600360008581526020019081526020016000209150816000019050808054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109705780601f1061094557610100808354040283529160200191610970565b820191906000526020600020905b81548152906001019060200180831161095357829003601f168201915b505050505092505050919050565b60008054905090565b6000600160008154809291906001019190505550600260008681526020019081526020016000206001549080600181540180825580915050906001820390600052602060002001600090919290919091505550600360006001548152602001908152602001600020905083816000019080519060200190610a09929190610b54565b5081816001019080519060200190610a22929190610b54565b5082816002019080519060200190610a3b929190610b54565b507fc6db2d91bd38fc956ee936e338803ac75e2658056ee148aa87892822b5465305848487604051808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610aaa578082015181840152602081019050610a8f565b50505050905090810190601f168015610ad75780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610b10578082015181840152602081019050610af5565b50505050905090810190601f168015610b3d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610b9557805160ff1916838001178555610bc3565b82800160010185558215610bc3579182015b82811115610bc2578251825591602001919060010190610ba7565b5b509050610bd09190610bd4565b5090565b610bf691905b80821115610bf2576000816000905550600101610bda565b5090565b905600a165627a7a723058203c40b4a14fe234758d2fa8c558b4b1413964f8aef73d1c4a7872dae1b50d17d60029',
      gas: '4700000'
    }, function (e, contract) {
      console.log(e, contract);
      $("#hiddenContract").removeClass("hidden");
      track += contract.transactionHash;
      var a = document.getElementById("contractHash");
      a.href = track;
      //a.innerText = track;
      setData('txHash', contract.transactionHash);
      if (typeof contract.address !== 'undefined') {
        console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
        setData('contract_hash', contract.address);
        //getNum();
        //$("#contractHash").addClass("hidden");
        //$("#hiddenContractDiv").removeClass("hidden");
      }
    });


}
function createFile() {
    var account = web3.eth.accounts[0];
    if (web3.eth.accounts[0] !== account) {
      account = web3.eth.accounts[0];
    }
    var a = document.getElementById("contract_hash");
    var who = document.getElementById("WHO").value;
    var date = document.getElementById("DATE").value;
    console.log("444444444444444444444444444444444");
    console.log(who);
    console.log(date.textContent);
    var instance = createContractInstance(a.textContent);
    var txnObject = {
      from: account,
      gas: 4400000
    }
    console.log("in createFile");
    var prompt="filecreated";
    instance.createFile.sendTransaction(who, prompt, date, txnObject, function (error, result) {
      console.log('RECVED>>>>><<<<<', error, result);
      if (error) {
        console.log("in error");
      } else {
        console.log("not in error");
      }
    });
  }

  function updateFile() {
    var account = web3.eth.accounts[0];
    if (web3.eth.accounts[0] !== account) {
      account = web3.eth.accounts[0];
    }
    var a = document.getElementById("contract_hash");
    var who = document.getElementById("who2").value;
    var what = document.getElementById("what").value;
    var when = document.getElementById("when").value;
    var fileid = document.getElementById("fileid2").value;
    console.log("444444444444444444444444444444444");
    console.log(who);
    console.log(what);
    console.log(when);
    
    var instance = createContractInstance(a.textContent);
    var txnObject = {
      from: account,
      gas: 4400000
    }
    console.log("in createFile");
    var prompt="filecreated";
    instance.updateFile.sendTransaction(fileid,who, what, when, txnObject, function (error, result) {
      console.log('RECVED>>>>><<<<<', error, result);
      if (error) {
        console.log("in error");
      } else {
        console.log("not in error");
      }
    });
  }
  function refereshFileId(){
    var answer=7;
    var account = web3.eth.accounts[0];
    if (web3.eth.accounts[0] !== account) {
      account = web3.eth.accounts[0];
    }
    console.log("555555555555555555555555555555");
    var a = document.getElementById("contract_hash");
    var instance = createContractInstance(a.textContent);
    instance.getFileCount.call(function (error, result) {
      console.log('RECVED>>>>><<<<<', error, result);
      if (error) {
        console.log("in error");
      } else {
        console.log("got latest fileID");
        setData('Latest_fileId',result);
      }
    });
    
  }

  function getChangeList() {
    var answer=7;
    var account = web3.eth.accounts[0];
    if (web3.eth.accounts[0] !== account) {
      account = web3.eth.accounts[0];
    }
    console.log("555555555555555555555555555555");
    var a = document.getElementById("contract_hash");
    var fileid = document.getElementById("fileid3").value;
    var instance = createContractInstance(a.textContent);
    console.log("yaayyy")
    console.log(fileid)
    instance.getChangeList.call(fileid, function (error, result) {
      console.log('RECVED>>>>><<<<<', error, result);
      if (error) {
        console.log("in error");
      } else {
        console.log("got latest changelist");
        setData('changelist',result);
      }
    });
  }
    function submitChangeId() {
      var answer=7;
      var account = web3.eth.accounts[0];
      if (web3.eth.accounts[0] !== account) {
        account = web3.eth.accounts[0];
      }
      console.log("555555555555555555555555555555");
      var a = document.getElementById("contract_hash");
      var changeid = document.getElementById("changeid").value;
      var instance = createContractInstance(a.textContent);
      console.log("yaayyy")
      console.log(changeid)
      instance.getChangewhat.call(changeid, function (error, result) {
        console.log('RECVED>>>>><<<<<', error, result);
        if (error) {
          console.log("in error");
        } else {
          var output = " What " + result ;
          console.log("got latest changelist");
          setData('changedatawhat', output);
        }
      });
      instance.getChangedata.call(changeid, function (error, result) {
        console.log('RECVED>>>>><<<<<', error, result);
        if (error) {
          console.log("in error");
        } else {
          var output1 =  " When " + result;
          console.log("got latest changelist");
          setData('changedatawhen', output1);
        }
      });
      instance.getChangewho.call(changeid, function (error, result) {
        console.log('RECVED>>>>><<<<<', error, result);
        if (error) {
          console.log("in error");
        } else {
          var output2 =  " Who " + result ;
          console.log("got latest changelist");
          setData('changedatawho', output2);
        }
      });
    }